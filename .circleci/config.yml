references:
  commands:
    install_unzip: &install_unzip
      name: install unzip command
      command: |
        sudo apt-get update -qq
        sudo apt-get install -y unzip

version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12.4

    working_directory: /go/src/github.com/haken-anime/gonpe-proto
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export PATH="$GOPATH/bin:$PATH"' >> $BASH_ENV
            echo 'export GO111MODULE=on' >> $BASH_ENV
      - run: *install_unzip
      - run:
          name: Setup lint & compile tools
          command: make setup
      - run:
          name: Compile
          command: make gen
      - store_artifacts:
          path: gen
          destination: .
      - persist_to_workspace:
          root: .
          paths:
            - .

  check_tag:
    docker:
      - image: ubuntu:18.04

    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:aa:54:7e:78:d0:5f:da:6a:bd:64:02:f2:12:2a:87"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - attach_workspace:
          at: .
      - run:
          name: checkout pb repository
          command: |
            git clone git@github.com:haken-anime/gonpe-pb.git /tmp/gonpe-pb
      - run:
          name: dry-run git tag
          command: |
            cd /tmp/gonpe-pb
            function inc_ver() { IFS="."; echo "$1" | ( read a b c && echo $a.$b.$((c + 1)) ) }
            LATEST_VERSION=$(git tag --sort=-committerdate | head -1)
            echo "Latest version: ${LATEST_VERSION}"
            echo "Target: ${CIRCLE_PROJECT_REPONAME}@${CIRCLE_SHA1}"
            echo "Tag: $(inc_ver ${LATEST_VERSION})"

  commit_pbs:
    docker:
      - image: ubuntu:18.04

    steps:
      - add_ssh_keys:
          fingerprints:
            - "87:aa:54:7e:78:d0:5f:da:6a:bd:64:02:f2:12:2a:87"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - attach_workspace:
          at: .
      - run:
          name: checkout pb repository
          command: |
            git clone git@github.com:haken-anime/gonpe-pb.git /tmp/gonpe-pb
      - run:
          name: update pb files
          command: |
            find /tmp/gonpe-pb -name "*.go" -exec rm {} \;
            cd gen
            find . -name "*.go" | xargs cp --parents -t /tmp/gonpe-pb
      - run:
          name: commit and push pb files
          command: |
            cd /tmp/gonpe-pb
            git config user.name haken-ci
            git config user.email noreply@haken-anime.org
            git add .
            git commit -m "[AUTO GENERATED] ${CIRCLE_PROJECT_REPONAME}@${CIRCLE_SHA1}"
            git push origin master
            function inc_ver() { IFS="."; echo "$1" | ( read a b c && echo $a.$b.$((c + 1)) ) }
            LATEST_VERSION=$(git tag --sort=-committerdate | head -1)
            git tag $(inc_ver ${LATEST_VERSION})
            git push origin --tags

  prototool-lint:
    docker:
      - image: circleci/golang:1.12.4

    working_directory: /go/src/github.com/haken-anime/gonpe-proto
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export PATH="$GOPATH/bin:$PATH"' >> $BASH_ENV
            echo 'export GO111MODULE=on' >> $BASH_ENV
      - run: *install_unzip
      - run:
          name: Setup lint & compile tools
          command: make setup
      - run: make lint

workflows:
  version: 2
  build:
    jobs:
      - build
      - prototool-lint
      - check_tag:
          requires:
            - build
      - commit_pbs:
          requires:
            - build
          filters:
            branches:
              only: master
